"0","library(plotly)"
"0","library(crosstalk)"
"0",""
"0"," p1 <- df %>% "
"0","   drop_na() %>% "
"0","   group_by(state,game_number,scrape_date) %>% "
"0","   summarise(number_tickets = sum(total_prizes) * mean(overall_odds),"
"0","             tickets_sold = sum(prizes_claimed) * mean(overall_odds)) %>%"
"0","   left_join(ticket_prices, by = c(""state"",""game_number"")) %>% "
"0","   mutate(dollar_spend = tickets_sold * ticket_price) %>% "
"0","   group_by(state,game_number) %>% "
"0","   arrange(game_number,scrape_date) %>% "
"0","   mutate(diff_tickets_sold = tickets_sold - lag(tickets_sold)) %>% "
"0","   mutate(diff_dollar_spend = dollar_spend - lag(dollar_spend)) %>% "
"0","   mutate(diff_days = as.numeric(scrape_date - lag(scrape_date))) %>% "
"0","   mutate(tickets_sold_per_day = diff_tickets_sold / diff_days) %>% "
"0","   mutate(dollar_spend_per_day = diff_dollar_spend / diff_days) %>% "
"0","   ungroup() %>% "
"0","   group_by(state,scrape_date) %>% "
"0","   arrange(scrape_date) %>% "
"0","   drop_na() %>% "
"0","   summarise(dollar_spend_per_day = sum(dollar_spend_per_day)) %>% "
"0","   ggplot(aes(x = scrape_date, y = dollar_spend_per_day, color = state))+"
"0","   geom_line()+"
"0","   geom_point()+"
"0","   theme_bw()+"
"0","   scale_y_continuous(labels = scales::label_dollar())+"
"0","   labs(y = ""$ Spend per Day"","
"0","        x = ""Date"")"
"2","`summarise()` has grouped output by 'state', 'game_number'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'state'. You can override using the `.groups` argument."
"0"," "
"0"," p2 <-ggplotly(p1, tooltip = c(""color"",""x"",""y""))"
"0"," p2c <-htmltools::div(p2, align = ""center"")"
"0"," p2c"
