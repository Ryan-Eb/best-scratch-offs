---
title: "Daily Ticket Spend"
output: 
  html_document:
    theme: yeti
---

```{r include=FALSE}

knitr::opts_chunk$set(echo = FALSE, 
                      warning = FALSE, 
                      message = FALSE,
                      fig.align = "center")

source("/Users/jennaryan/Documents/GitHub/all_lotto_states/all_states_analysis.R")


```

#### \$ Amount Spent on Scratch off tickets daily by state {style="text-align: center"}

```{r eval=FALSE, include=FALSE}
library(plotly)
library(crosstalk)

 p1 <- df %>% 
   drop_na() %>% 
   group_by(state,game_number,scrape_date) %>% 
   summarise(number_tickets = sum(total_prizes) * mean(overall_odds),
             tickets_sold = sum(prizes_claimed) * mean(overall_odds)) %>%
   left_join(ticket_prices, by = c("state","game_number")) %>% 
   mutate(dollar_spend = tickets_sold * ticket_price) %>% 
   group_by(state,game_number) %>% 
   arrange(game_number,scrape_date) %>% 
   mutate(diff_tickets_sold = tickets_sold - lag(tickets_sold)) %>% 
   mutate(diff_dollar_spend = dollar_spend - lag(dollar_spend)) %>% 
   mutate(diff_days = as.numeric(scrape_date - lag(scrape_date))) %>% 
   mutate(tickets_sold_per_day = diff_tickets_sold / diff_days) %>% 
   mutate(dollar_spend_per_day = diff_dollar_spend / diff_days) %>% 
   ungroup() %>% 
   group_by(state,scrape_date) %>% 
   arrange(scrape_date) %>% 
   drop_na() %>% 
   summarise(dollar_spend_per_day = sum(dollar_spend_per_day)) %>% 
   ggplot(aes(x = scrape_date, y = dollar_spend_per_day, color = state))+
   geom_line()+
   geom_point()+
   theme_bw()+
   scale_y_continuous(labels = scales::label_dollar())+
   labs(y = "$ Spend per Day",
        x = "Date")
 
 p2 <-ggplotly(p1, tooltip = c("color","x","y"))
 p2c <-htmltools::div(p2, align = "center")
 p2c
```

```{r fig.align='center'}
library(plotly)
library(crosstalk)
library(htmltools)
library(htmlwidgets)

state_spend_2 <- state_spend %>% mutate(name_bar = 5)

state_highlight <- highlight_key(state_spend_2,~state,"Select A State")

slp <- plot_ly(data = state_highlight,
               x = ~scrape_date,
               y = ~dollar_spend_per_day,
               text = ~state,
               color = I("black")) %>% 
  add_lines(hoverinfo = "text")

sbc <- plot_ly(data = state_highlight,
        y = ~state,
        x = ~name_bar,
        text = ~state,
        textposition = "inside",
        insidetextanchor = "middle",
        hoverinfo = "text") %>% 
  group_by(state) %>% summarise(name_bar = name_bar[1]) %>% 
  add_bars(x=~name_bar) %>% 
  layout(yaxis = list(visible = FALSE),
         xaxis = list(visible = FALSE))

state_plots <- subplot(sbc,slp,widths = c(.1,.9)) %>% highlight(on = "plotly_hover", selectize = FALSE) %>% 
  layout(barmode = "overlay",
         showlegend = FALSE)

div(style = "text-align: center",
    state_plots)
```

Hold shift to select multiple states

*Disclaimer: The information provided on this website is for educational and entertainment purposes only. We do not guarantee the accuracy or reliability of any information presented. Our recommendations and analysis should not be construed as financial advice, and we are not responsible for any financial losses or damages that may occur. We do not encourage or endorse any form of gambling and recommend that individuals conduct their own research before making any decisions. By using this website, you agree to hold us harmless from any liability arising from your use of the information presented.*
