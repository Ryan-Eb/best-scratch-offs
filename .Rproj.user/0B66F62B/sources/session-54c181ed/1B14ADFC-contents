library(dplyr)
library(maps)
library(leaflet)
library(htmlwidgets)
library(htmltools)

state_convert <- data.frame(abb = state.abb, name = state.name)

state_map_data <- state_spend %>% group_by(state) %>% 
  summarise(avg_daily = mean(dollar_spend_per_day)) %>% 
  mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower())

# Load US state map data
us_states <- map("state", fill = TRUE, plot = FALSE)


# Define the content to be displayed when hovering over a state
popup_content <- paste0(
  "<strong>", us_states$names %>% str_split(":",simplify = TRUE) %>% .[,1], "</strong>",
  "<br>Daily Ticket Spend: ", round(state_map_data$avg_daily[match(us_states$names %>% str_split(":",simplify = TRUE) %>% 
                                                            .[,1], tolower(state_map_data$state))], 0) %>% 
    scales::label_dollar()(.)
)

# Create a leaflet map
leaflet_map <- leaflet() %>%
  addProviderTiles(provider = providers$CartoDB.Positron) %>%
  addPolygons(data = us_states,
              fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>% 
                                   .[,1] %in% state_map_data$state, "orange", "white"),
              color = "grey", weight = 1,
              opacity = 1, fillOpacity = .6,
              # Bind the popup to display the state data
              popup = popup_content,
              layerId = ~us_states$names,
              group = "states") %>%
  # Set the initial view to show the entire US
  fitBounds(lng1 = -128, lat1 = 23, lng2 = -65, lat2 = 50)


leaflet_map
