# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
fitBounds(lng1 = -128, lat1 = 23, lng2 = -65, lat2 = 50)
leaflet_map
us_states$names
# Define the content to be displayed when hovering over a state
popup_content <- paste0(
"<strong>", us_states$names %>% str_split(":",simplify = TRUE) %>% .,[1], "</strong>",
# Define the content to be displayed when hovering over a state
popup_content <- paste0(
"<strong>", us_states$names %>% str_split(":",simplify = TRUE) %>% .[,1], "</strong>",
"<br>Daily Ticket Spend: ", round(state_map_data$avg_daily[match(us_states$names %>% str_split(":",simplify = TRUE) %>%
.[,1], tolower(state_map_data$state))], 0) %>%
scales::label_dollar()(.)
)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
fitBounds(lng1 = -128, lat1 = 23, lng2 = -65, lat2 = 50)
leaflet_map
?addPolygons
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE,
fig.align = "center")
source("/Users/jennaryan/Documents/GitHub/all_lotto_states/all_states_analysis.R")
state_highlight <- highlight_key(state_spend,~state,"Select A State")
spp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = ~state) %>%
add_lines(hoverinfo = "text")
spp
sbc <- plot_ly(data = state_highlight,
x = ~state,
y = ~ 10) %>%
add_bars()
sbc
sbc <- plot_ly(data = state_highlight,
x = ~state,
y = ~ "10") %>%
add_bars()
select2 <- highlight(
spp,
on = "plotly_hover",
selectize = TRUE, persistent = FALSE, color = "red")
sbc
sbc <- plot_ly(data = state_highlight,
x = ~state,
y = ~ 1) %>%
add_bars()
sbc
state_spend %>% mutate(name_bar = 10)
state_spend_2 <- state_spend %>% mutate(name_bar = 10)
state_highlight <- highlight_key(state_spend_2,~state,"Select A State")
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = ~state) %>%
add_lines(hoverinfo = "text")
sbc <- plot_ly(data = state_highlight,
x = ~state,
y = ~name_bar) %>%
add_bars()
sbc
sbc <- plot_ly(data = state_highlight %>%
group_by(state) %>%
summarise(name_bar = name_bar[1]),
x = ~state,
y = ~name_bar) %>%
add_bars()
sbc <- plot_ly(data = state_highlight,
x = ~state,
y = ~name_bar) %>%
add_bars()
slp %>% group_by(state) %>% summarise(name_bar = name_bar[1])
slp %>% group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x = ~state,
y = ~name_bar)
slp %>% group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x = ~state,
y = ~name_bar) %>%
layout(xaxis = list(title = "State"))
slp %>% group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_markers(x = ~state,
y = ~name_bar) %>%
layout(xaxis = list(title = "State"))
slp %>% group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_markers(x = ~state,
y = ~name_bar) %>%
layout(xaxis = list(title = "State"))
slp %>% group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_markers(y = ~state,
x = ~name_bar) %>%
layout(xaxis = list(title = "State"))
slp %>% group_by(state) %>% summarise(name_bar = name_bar[1])
?layout
sbc <- slp %>% group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x =~state,
y =~name_bar)
sbc
sbc <- slp %add_bars(x=~state, y= ~name_bar)
sbc <- slp %>% add_bars(x=~state, y= ~name_bar)
sbc
slp
plol_ly(data = state_highlight,
x = ~state,
y = ~name_bar)
plot_ly(data = state_highlight,
x = ~state,
y = ~name_bar)
plot_ly(data = state_highlight,
x = ~state,
y = ~name_bar) %>%
group_by(state) %>% summarise(name_bar = name_bar[1])
sbc <- plot_ly(data = state_highlight,
x = ~state,
y = ~name_bar) %>%
group_by(state) %>% summarise(name_bar = name_bar[1])
sbc
sbc <- plot_ly(data = state_highlight,
x = ~state,
y = ~name_bar) %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(y=~name_bar)
sbc
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar) %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(y=~name_bar)
sbc
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar) %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar)
sbc
subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar) %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar, overlay = TRUE)
subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar) %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar)
subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay")
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
textposition = "inside") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar)
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar)
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(xaxis = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar)
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxix = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = ~state,
color = I("black")) %>%
add_lines(hoverinfo = "text")
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside",
insidetextanchor = "middle") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = TRUE, color = "red") %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = FALSE, color = "red") %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = FALSE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
state_plots <- subplot(sbc,slp,widths = c(.2,.8)) %>% highlight(on = "plotly_hover", selectize = FALSE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
?subplot
state_spend_2 <- state_spend %>% mutate(name_bar = 5)
state_highlight <- highlight_key(state_spend_2,~state,"Select A State")
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = ~state,
color = I("black")) %>%
add_lines(hoverinfo = "text")
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside",
insidetextanchor = "middle") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.1,.9)) %>% highlight(on = "plotly_hover", selectize = FALSE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside",
insidetextanchor = "middle") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE),
xaxis = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.1,.9)) %>% highlight(on = "plotly_hover", selectize = FALSE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside",
insidetextanchor = "middle",
hoverinfo = "text") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE),
xaxis = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.1,.9)) %>% highlight(on = "plotly_hover", selectize = FALSE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
fitBounds(lng1 = -128, lat1 = 23, lng2 = -65, lat2 = 50)
state_convert <- data.frame(abb = state.abb, name = state.name)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower())
# Load US state map data
us_states <- map("state", fill = TRUE, plot = FALSE)
# Define the content to be displayed when hovering over a state
popup_content <- paste0(
"<strong>", us_states$names %>% str_split(":",simplify = TRUE) %>% .[,1], "</strong>",
"<br>Daily Ticket Spend: ", round(state_map_data$avg_daily[match(us_states$names %>% str_split(":",simplify = TRUE) %>%
.[,1], tolower(state_map_data$state))], 0) %>%
scales::label_dollar()(.)
)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
fitBounds(lng1 = -128, lat1 = 23, lng2 = -65, lat2 = 50)
leaflet_map
leaflet_map
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setValidity(lng = -110, lat = 30, zoom = 3)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setiew(lng = -110, lat = 30, zoom = 3)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -110, lat = 30, zoom = 3)
leaflet_map
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95, lat = 37, zoom = 3)
leaflet_map
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95, lat = 37, zoom = 6)
leaflet_map
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95, lat = 37, zoom = 4)
leaflet_map
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95.2, lat = 37, zoom = 4)
leaflet_map
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95.7, lat = 37, zoom = 4)
leaflet_map
