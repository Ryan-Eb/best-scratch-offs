')
leaflet_map %>% htmlwidgets::onRender(jsCode, data=state_map_data)
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.win_url[i];
marker[i].addEventListener("click", function() { window.open(https://www.stackoverflow.com");}, false);
}());
}
}
')
leaflet_map %>% htmlwidgets::onRender(jsCode, data=state_map_data)
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.win_url[i];
marker[i].addEventListener("click", function() { window.open("https://www.stackoverflow.com");}, false);
}());
}
}
')
leaflet_map %>% htmlwidgets::onRender(jsCode, data=state_map_data)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower()) %>%
mutate(win_url = "https://best-scratch-offs.com")
# Load US state map data
us_states <- maps::map("state", fill = TRUE, plot = FALSE)
# Define the content to be displayed when hovering over a state
popup_content <- paste0(
"<strong>", us_states$names %>% str_split(":",simplify = TRUE) %>% .[,1], "</strong>",
"<br>Daily Ticket Spend: ", round(state_map_data$avg_daily[match(us_states$names %>% str_split(":",simplify = TRUE) %>%
.[,1], tolower(state_map_data$state))], 0) %>%
scales::label_dollar()(.)
)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95.7, lat = 37, zoom = 4)
leaflet_map
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.win_url[i];
marker[i].addEventListener("click", function() { window.open(v);}, false);
}());
}
}
')
leaflet_map %>% htmlwidgets::onRender(jsCode, data=state_map_data)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
stroke = TRUE,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95.7, lat = 37, zoom = 4)
leaflet_map
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.win_url[i];
marker[i].addEventListener("click", function() { window.open(v);}, false);
}());
}
}
')
leaflet_map %>% htmlwidgets::onRender(jsCode, data=state_map_data)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower()) %>%
mutate(url = paste0("https://best-scratch-offs.com/",state))
View(state_map_data)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower()) %>%
mutate(url = paste0("https://best-scratch-offs.com/",state))
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(url = paste0("https://best-scratch-offs.com/",state)) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower())
View(state_map_data)
# Load US state map data
us_states <- maps::map("state", fill = TRUE, plot = FALSE)
# Define the content to be displayed when hovering over a state
popup_content <- paste0(
"<strong>", us_states$names %>% str_split(":",simplify = TRUE) %>% .[,1], "</strong>",
"<br>Daily Ticket Spend: ", round(state_map_data$avg_daily[match(us_states$names %>% str_split(":",simplify = TRUE) %>%
.[,1], tolower(state_map_data$state))], 0) %>%
scales::label_dollar()(.)
)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
stroke = TRUE,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95.7, lat = 37, zoom = 4)
leaflet_map
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.url[i];
marker[i].addEventListener("click", function() { window.open(v);}, false);
}());
}
}
')
leaflet_map %>% htmlwidgets::onRender(jsCode, data=state_map_data)
View(state_map_data)
View(state_map_data)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower())
# Load US state map data
us_states <- maps::map("state", fill = TRUE, plot = FALSE)
# Define the content to be displayed when hovering over a state
popup_content <- paste0(
"<strong>", us_states$names %>% str_split(":",simplify = TRUE) %>% .[,1], "</strong>",
"<br>Daily Ticket Spend: ", round(state_map_data$avg_daily[match(us_states$names %>% str_split(":",simplify = TRUE) %>%
.[,1], tolower(state_map_data$state))], 0) %>%
scales::label_dollar()(.)
)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
stroke = TRUE,
# Bind the popup to display the state data
popup = popup_content,
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95.7, lat = 37, zoom = 4)
leaflet_map
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.url[i];
marker[i].addEventListener("click", function() { window.open(v);}, false);
}());
}
}
')
leaflet_map %>% htmlwidgets::onRender(jsCode, data=state_map_data)
View(us_states)
View(state_map_data)
View(us_states)
us_states$names
View(state_map_data)
?onRender
us_states
us_states$names
us_states$names %>%
mutate(state_name = names %>% str_split(":",simplify = TRUE) %>% .[,1])
data.frame(names <- us_states$names)
data.frame(names <- us_states$names) %>%
mutate(state_name = names %>% str_split(":",simplify = TRUE) %>% .[,1])
data.frame(names <- us_states$names) %>%
mutate(state_name = names %>% str_split(":",simplify = TRUE) %>% .[,1]) %>%
left_join(state_map_data, by = "state")
data.frame(names <- us_states$names) %>%
mutate(state = names %>% str_split(":",simplify = TRUE) %>% .[,1]) %>%
left_join(state_map_data, by = "state")
url_data <- data.frame(names <- us_states$names) %>%
mutate(state = names %>% str_split(":",simplify = TRUE) %>% .[,1]) %>%
left_join(state_map_data, by = "state")
leaflet_map %>% htmlwidgets::onRender(jsCode, data=url_data)
View(url_data)
url_data <- data.frame(names <- us_states$names) %>%
mutate(state = names %>% str_split(":",simplify = TRUE) %>% .[,1]) %>%
left_join(state_map_data, by = "state") %>%
mutate(ifelse(is.na(url),"https://best-scratch-offs.com",url))
View(url_data)
url_data <- data.frame(names <- us_states$names) %>%
mutate(state = names %>% str_split(":",simplify = TRUE) %>% .[,1]) %>%
left_join(state_map_data, by = "state") %>%
mutate(url = ifelse(is.na(url),"https://best-scratch-offs.com",url))
View(url_data)
# Create a leaflet map
leaflet_map <- leaflet() %>%
addProviderTiles(provider = providers$Stamen.TonerLite) %>%
addPolygons(data = us_states,
fillColor = ifelse(us_states$names %>% str_split(":", simplify = TRUE) %>%
.[,1] %in% state_map_data$state, "orange", "white"),
color = "grey", weight = 1,
opacity = 1, fillOpacity = .6,
stroke = TRUE,
# Bind the popup to display the state data
layerId = ~us_states$names,
group = "states") %>%
# Set the initial view to show the entire US
setView(lng = -95.7, lat = 37, zoom = 4)
leaflet_map
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.url[i];
marker[i].addEventListener("click", function() { window.open(v);}, false);
}());
}
}
')
leaflet_map %>% htmlwidgets::onRender(jsCode, data=url_data)
View(url_data)
View(state_map_data)
state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day))
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower())
View(state_map_data)
state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state)))
View(state_convert)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower())
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower())
View(state_map_data)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert$name[which(state_convert$abb == state)] %>% tolower())
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state)] %>% tolower())
View(state_map_data)
which(state_convert$abb[3] %in% state)
which(state_convert$abb %in% state)
which(state_convert$abb %in% "nc")
which(state_convert$abb %in% "NC")
View(state_convert)
which(state_convert$abb %in% "NY")
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state)))
View(state_map_data)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert[3])
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert$name[3])
View(state_map_data)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state))) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state_abb)])
View(state_map_data)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state_abb))) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state_abb)])
View(state_map_data)
which(state_convert$name %in% "new york")
which(state_convert$name %in% "New York")
which(state_convert$name %in% "North Carolina")
which(state_convert$name %in% "North")
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(state = state_convert$name[which(state_convert$abb %in% state_abb)])
View(state_map_data)
View(state_convert)
View(state_convert)
which(state_convert$name %in% "North")
?which
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state_abb))) %>%
mutate(state = state_convert$name[match(state_convert$abb == state_abb)])
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state_abb))) %>%
mutate(state = state_convert$name[match(state_abb,state_convert$abb)])
View(state_map_data)
state_convert <- data.frame(abb = state.abb, name = state.name)
state_map_data <- state_spend %>% group_by(state) %>%
summarise(avg_daily = mean(dollar_spend_per_day)) %>%
mutate(state_abb = state) %>%
mutate(url = paste0("https://best-scratch-offs.com/",tolower(state_abb))) %>%
mutate(state = state_convert$name[match(state_abb,state_convert$abb)] %>% tolower())
View(state_map_data)
url_data <- data.frame(names <- us_states$names) %>%
mutate(state = names %>% str_split(":",simplify = TRUE) %>% .[,1]) %>%
left_join(state_map_data, by = "state") %>%
mutate(url = ifelse(is.na(url),"https://best-scratch-offs.com",url))
url_data <- data.frame(names <- us_states$names) %>%
mutate(state = names %>% str_split(":",simplify = TRUE) %>% .[,1]) %>%
left_join(state_map_data, by = "state")
View(url_data)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE,
fig.align = "center")
source("/Users/jennaryan/Documents/GitHub/all_lotto_states/all_states_analysis.R")
library(plotly)
library(crosstalk)
library(htmltools)
library(htmlwidgets)
state_spend_2 <- state_spend %>% mutate(name_bar = 5)
state_highlight <- highlight_key(state_spend_2,~state,"Select A State")
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = ~state,
color = I("black")) %>%
add_lines(hoverinfo = "text")
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside",
insidetextanchor = "middle",
hoverinfo = "text") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE),
xaxis = list(visible = FALSE))
state_plots <- subplot(sbc,slp,widths = c(.1,.9)) %>% highlight(on = "plotly_hover", selectize = FALSE) %>%
layout(barmode = "overlay",
showlegend = FALSE)
div(style = "text-align: center",
state_plots)
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = ~state,
color = I("black")) %>%
add_lines(hoverinfo = "text") %>%
add_markers()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = paste0("State: ",~state),
color = I("black")) %>%
add_lines(hoverinfo = "text") %>%
add_markers()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = c(~state,~dollar_spend_per_day),
color = I("black")) %>%
add_lines(hoverinfo = "text") %>%
add_markers()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = c(~state,~dollar_spend_per_day),
color = I("black")) %>%
add_lines(hoverinfo = "text",
hovertemplate = "X: %{x}<br>Y: %{y}<br>Text: %{text}") %>%
add_markers()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = c(~state,~dollar_spend_per_day),
color = I("black")) %>%
add_lines(hoverinfo = "text") %>%
add_markers()
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
text = c(~state,~dollar_spend_per_day),
color = I("black")) %>%
add_lines(hovertext = ~paste0("State: ", state),
hoverinfo = "text") %>%
add_markers()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
color = I("black")) %>%
add_lines(hovertext = ~paste0("State: ", state),
hoverinfo = "text") %>%
add_markers()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
color = I("black")) %>%
add_lines(hovertext = ~ paste0("State: ", state),
hoverinfo = "text") %>%
add_markers()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
color = I("black")) %>%
add_lines(hovertext = ~ paste0("State: ", state),
hoverinfo = "text")
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
color = I("black")) %>%
add_markers(hovertext = ~ paste0("State: ", state),
hoverinfo = "text") %>%
add_lines()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
color = I("black")) %>%
add_markers(hovertext = ~ paste0("State: ", state, <br>,dollar_spend_per_day),
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
color = I("black")) %>%
add_markers(hovertext = ~ paste0("State: ", state, "<br>",dollar_spend_per_day),
hoverinfo = "text") %>%
add_lines()
slp
slp <- plot_ly(data = state_highlight,
x = ~scrape_date,
y = ~dollar_spend_per_day,
color = I("black")) %>%
add_markers(hovertext = ~ paste0("State: ", state, "<br>",dollar_spend_per_day %>% scales::label_dollar()(.)),
hoverinfo = "text") %>%
add_lines()
slp
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside",
insidetextanchor = "middle",
hoverinfo = "text") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE),
xaxis = list(visible = FALSE))
sbc <- plot_ly(data = state_highlight,
y = ~state,
x = ~name_bar,
text = ~state,
textposition = "inside",
insidetextanchor = "middle",
hoverinfo = "text") %>%
group_by(state) %>% summarise(name_bar = name_bar[1]) %>%
add_bars(x=~name_bar) %>%
layout(yaxis = list(visible = FALSE),
xaxis = list(visible = FALSE))
