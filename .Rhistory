xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.7,
ymax = y1+.9)+
annotate("text",
x = x1+1,
y = y1 +1.3,
label = "$ $ $ $",
size = 5)+
annotate("text",
x = x1+1,
y = y1 +1.7,
label = "WINNER",
size = 5)+
annotate("text",
x = x1+1.3,
y = y1+2.9,
label = "best-scratch-offs.com/nc",
size = 5,
fontface = "bold")+
coord_quickmap()+
theme_bw()+
theme(panel.grid = element_blank(),
panel.border = element_blank(),
line = element_blank(),
text = element_blank(),
plot.margin = margin(0,0,0,0))
NC_logo
x1 = -82.5
y1 = 33.5
NC_logo <- ggplot2::map_data("state","north carolina") %>%
ggplot(aes(long,lat))+
geom_polygon(fill = "white", color = "black", linewidth=2)+
annotate("rect",
xmin = x1+.4,
xmax = x1+2.4,
ymin = y1+.4,
ymax = y1+2.4,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = x1+.2,
xmax = x1+2.2,
ymin = y1+.2,
ymax = y1+2.2,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = x1,
xmax = x1+2,
ymin = y1,
ymax = y1+2,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.1,
ymax = y1+.3)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.4,
ymax = y1+.6)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.7,
ymax = y1+.9)+
annotate("text",
x = x1+1,
y = y1 +1.3,
label = "$ $ $ $",
size = 5)+
annotate("text",
x = x1+1,
y = y1 +1.7,
label = "WINNER",
size = 5)+
annotate("text",
x = x1+1.3,
y = y1+2.9,
label = "best-scratch-offs.com/nc",
size = 5,
fontface = "bold")+
coord_quickmap()+
theme_bw()+
theme(panel.grid = element_blank(),
panel.border = element_blank(),
line = element_blank(),
text = element_blank(),
plot.margin = margin(0,0,0,0))
NC_logo
x1 = -83.5
NC_logo <- ggplot2::map_data("state","north carolina") %>%
ggplot(aes(long,lat))+
geom_polygon(fill = "white", color = "black", linewidth=2)+
annotate("rect",
xmin = x1+.4,
xmax = x1+2.4,
ymin = y1+.4,
ymax = y1+2.4,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = x1+.2,
xmax = x1+2.2,
ymin = y1+.2,
ymax = y1+2.2,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = x1,
xmax = x1+2,
ymin = y1,
ymax = y1+2,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.1,
ymax = y1+.3)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.4,
ymax = y1+.6)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.7,
ymax = y1+.9)+
annotate("text",
x = x1+1,
y = y1 +1.3,
label = "$ $ $ $",
size = 5)+
annotate("text",
x = x1+1,
y = y1 +1.7,
label = "WINNER",
size = 5)+
annotate("text",
x = x1+1.3,
y = y1+2.9,
label = "best-scratch-offs.com/nc",
size = 5,
fontface = "bold")+
coord_quickmap()+
theme_bw()+
theme(panel.grid = element_blank(),
panel.border = element_blank(),
line = element_blank(),
text = element_blank(),
plot.margin = margin(0,0,0,0))
NC_logo
x1 = -81.5
y1 = 33.5
NC_logo <- ggplot2::map_data("state","north carolina") %>%
ggplot(aes(long,lat))+
geom_polygon(fill = "white", color = "black", linewidth=2)+
annotate("rect",
xmin = x1+.4,
xmax = x1+2.4,
ymin = y1+.4,
ymax = y1+2.4,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = x1+.2,
xmax = x1+2.2,
ymin = y1+.2,
ymax = y1+2.2,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = x1,
xmax = x1+2,
ymin = y1,
ymax = y1+2,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.1,
ymax = y1+.3)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.4,
ymax = y1+.6)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.7,
ymax = y1+.9)+
annotate("text",
x = x1+1,
y = y1 +1.3,
label = "$ $ $ $",
size = 5)+
annotate("text",
x = x1+1,
y = y1 +1.7,
label = "WINNER",
size = 5)+
annotate("text",
x = x1+1.3,
y = y1+2.9,
label = "best-scratch-offs.com/nc",
size = 5,
fontface = "bold")+
coord_quickmap()+
theme_bw()+
theme(panel.grid = element_blank(),
panel.border = element_blank(),
line = element_blank(),
text = element_blank(),
plot.margin = margin(0,0,0,0))
NC_logo
y1 = 33.2
NC_logo <- ggplot2::map_data("state","north carolina") %>%
ggplot(aes(long,lat))+
geom_polygon(fill = "white", color = "black", linewidth=2)+
annotate("rect",
xmin = x1+.4,
xmax = x1+2.4,
ymin = y1+.4,
ymax = y1+2.4,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = x1+.2,
xmax = x1+2.2,
ymin = y1+.2,
ymax = y1+2.2,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = x1,
xmax = x1+2,
ymin = y1,
ymax = y1+2,
fill = "white",
color = "black",
linetype = 2)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.1,
ymax = y1+.3)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.4,
ymax = y1+.6)+
annotate("rect",
xmin = c(x1+.1, x1+.5, x1+.9, x1+1.3, x1+1.7),
xmax = c(x1+.3, x1+.7, x1+1.1, x1+1.5, x1+1.9),
ymin = y1+.7,
ymax = y1+.9)+
annotate("text",
x = x1+1,
y = y1 +1.3,
label = "$ $ $ $",
size = 5)+
annotate("text",
x = x1+1,
y = y1 +1.7,
label = "WINNER",
size = 5)+
annotate("text",
x = x1+1.3,
y = y1+2.9,
label = "best-scratch-offs.com/nc",
size = 5,
fontface = "bold")+
coord_quickmap()+
theme_bw()+
theme(panel.grid = element_blank(),
panel.border = element_blank(),
line = element_blank(),
text = element_blank(),
plot.margin = margin(0,0,0,0))
NC_logo
#datafrome for topprize tracker and unused chart
top_pize_tracker <- clean_df %>%
filter(percent_claimed < 100) %>%
filter(prize_amount >= 5e6)
top_prize_plot1 <- top_pize_tracker %>%
ggplot(aes(x = game_age, y = percent_claimed, color = Game_name ))+
geom_point()+
geom_label_repel(data = top_pize_tracker %>% filter(scrape_date==max(scrape_date)), aes(label = scales::label_dollar()(prize_amount)),
show.legend = FALSE)+
theme_bw()+
labs(x = "Age of Game - Days",
y = "% of Winning Tickets Claimed",
title = "% of Winning Tickets Claimed",
caption = "*prizes $5mil or greater")+
theme(legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.position = "bottom",
plot.caption = element_text(face = "bold"))+
guides(color = guide_legend(nrow = 3))
top_prize_plot1
#datafrome for topprize tracker and unused chart
top_pize_tracker <- clean_df %>%
filter(percent_claimed < 100) %>%
filter(prize_amount >= 5e6)
top_prize_plot1 <- top_pize_tracker %>%
ggplot(aes(x = game_age, y = percent_claimed, color = game_name ))+
geom_point()+
geom_label_repel(data = top_pize_tracker %>% filter(scrape_date==max(scrape_date)), aes(label = scales::label_dollar()(prize_amount)),
show.legend = FALSE)+
theme_bw()+
labs(x = "Age of Game - Days",
y = "% of Winning Tickets Claimed",
title = "% of Winning Tickets Claimed",
caption = "*prizes $5mil or greater")+
theme(legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.position = "bottom",
plot.caption = element_text(face = "bold"))+
guides(color = guide_legend(nrow = 3))
top_prize_plot1
top_prize_plot1
#datafrome for topprize tracker and unused chart
top_pize_tracker <- clean_df %>%
filter(percent_claimed < 100) %>%
filter(prize_amount >= 1e6)
top_prize_plot1 <- top_pize_tracker %>%
ggplot(aes(x = game_age, y = percent_claimed, color = game_name ))+
geom_point()+
geom_label_repel(data = top_pize_tracker %>% filter(scrape_date==max(scrape_date)), aes(label = scales::label_dollar()(prize_amount)),
show.legend = FALSE)+
theme_bw()+
labs(x = "Age of Game - Days",
y = "% of Winning Tickets Claimed",
title = "% of Winning Tickets Claimed",
caption = "*prizes $1mil or greater")+
theme(legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.position = "bottom",
plot.caption = element_text(face = "bold"))+
guides(color = guide_legend(nrow = 3))
top_prize_plot1
top_prize_plot1
#datafrome for topprize tracker and unused chart
top_pize_tracker <- clean_df %>%
filter(percent_claimed < 100) %>%
filter(prize_amount >= 2e6)
top_prize_plot1 <- top_pize_tracker %>%
ggplot(aes(x = game_age, y = percent_claimed, color = game_name ))+
geom_point()+
geom_label_repel(data = top_pize_tracker %>% filter(scrape_date==max(scrape_date)), aes(label = scales::label_dollar()(prize_amount)),
show.legend = FALSE)+
theme_bw()+
labs(x = "Age of Game - Days",
y = "% of Winning Tickets Claimed",
title = "% of Winning Tickets Claimed",
caption = "*prizes $2mil or greater")+
theme(legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.position = "bottom",
plot.caption = element_text(face = "bold"))+
guides(color = guide_legend(nrow = 3))
top_prize_plot1
top_prize_plot1
#datafrome for topprize tracker and unused chart
top_pize_tracker <- clean_df %>%
mutate(game_name = str_replace_all(game_name, "[^a-zA-Z0-9]", " ")) %>%
filter(percent_claimed < 100) %>%
filter(prize_amount >= 2e6)
top_prize_plot1 <- top_pize_tracker %>%
ggplot(aes(x = game_age, y = percent_claimed, color = game_name ))+
geom_point()+
geom_label_repel(data = top_pize_tracker %>% filter(scrape_date==max(scrape_date)), aes(label = scales::label_dollar()(prize_amount)),
show.legend = FALSE)+
theme_bw()+
labs(x = "Age of Game - Days",
y = "% of Winning Tickets Claimed",
title = "% of Winning Tickets Claimed",
caption = "*prizes $2mil or greater")+
theme(legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.position = "bottom",
plot.caption = element_text(face = "bold"))+
guides(color = guide_legend(nrow = 3))
top_prize_plot1
top_prize_plot1
top_prize_plot2 <- top_pize_tracker %>%
ggplot(aes(x = game_age, y = prizes_remaining, color = game_name ))+
geom_point()+
geom_label_repel(data = top_pize_tracker %>% filter(scrape_date==max(scrape_date)),aes(label = scales::label_dollar()(prize_amount)),
show.legend = FALSE)+
scale_y_continuous(breaks = scales::pretty_breaks())+
theme_bw()+
labs(x = "Age of Game - Days",
y = "# of Winning Tickets Remaining",
title = "Winning Tickets Remaining",
caption = "*prizes $5mil or greater")+
theme(legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.position = "bottom",
plot.caption = element_text(face = "bold"))+
guides(color = guide_legend(nrow = 3))
top_prize_plot2
top_prize_plot2 <- top_pize_tracker %>%
ggplot(aes(x = game_age, y = remaining_prizes, color = game_name ))+
geom_point()+
geom_label_repel(data = top_pize_tracker %>% filter(scrape_date==max(scrape_date)),aes(label = scales::label_dollar()(prize_amount)),
show.legend = FALSE)+
scale_y_continuous(breaks = scales::pretty_breaks())+
theme_bw()+
labs(x = "Age of Game - Days",
y = "# of Winning Tickets Remaining",
title = "Winning Tickets Remaining",
caption = "*prizes $5mil or greater")+
theme(legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.position = "bottom",
plot.caption = element_text(face = "bold"))+
guides(color = guide_legend(nrow = 3))
top_prize_plot2
library(tidyverse)
library(lubridate)
source("/Users/jennaryan/Documents/GitHub/best-scratch-offs/fl_data_prep.R")
tickets_sold_df <- clean_df %>%
select(Game_number,Game_name,scrape_date,game_age,tickets_sold,ticket_cost,ticket_cost_num) %>%
group_by(scrape_date) %>%
distinct(Game_number, .keep_all = TRUE) %>%
arrange(Game_number,scrape_date) %>%
ungroup() %>%
group_by(Game_number) %>%
mutate(sold_since_last_scrape = tickets_sold - lag(tickets_sold)) %>%
mutate(days_since_last_scrape = as.numeric(scrape_date - lag(scrape_date))) %>%
mutate(tickets_per_day_since_last_scrape = sold_since_last_scrape/days_since_last_scrape) %>%
ungroup()
#most popular game today
tickets_sold_df %>%
filter(scrape_date == max(scrape_date)) %>%
arrange(desc(tickets_per_day_since_last_scrape)) %>%
.[1,] %>% view()
#tickets sold per day since last scrape for each ticket amount
tickets_sold_df %>%
filter(scrape_date == max(scrape_date)) %>%
group_by(ticket_cost_num) %>%
summarise(tickets_sold_per_day = sum(tickets_per_day_since_last_scrape)) %>%
ungroup() %>%
mutate(total_dollar_spend_on_tickets = ticket_cost_num * tickets_sold_per_day)
#tickets sold per day total since last scrape
tickets_sold_df %>%
filter(scrape_date == max(scrape_date)) %>%
group_by(ticket_cost_num) %>%
summarise(tickets_sold_per_day = sum(tickets_per_day_since_last_scrape)) %>%
ungroup() %>%
mutate(total_dollar_spend_on_tickets = ticket_cost_num * tickets_sold_per_day) %>%
summarise(tickets_sold_per_day = sum(tickets_sold_per_day),
total_dollar_spend_on_tickets = sum(total_dollar_spend_on_tickets))
#total spend on scratch offs per day dataframe
#this will be interesting to track for seasonality, weekends, holidays, etc,...
tickets_sold_df %>%
drop_na() %>%
mutate(dollar_per_day = tickets_per_day_since_last_scrape * ticket_cost_num) %>%
group_by(scrape_date) %>%
summarise(dollar_spend_per_day = sum(dollar_per_day))
#plot of ticket spend per day for each ticket amount
tickets_sold_df %>%
drop_na() %>%
mutate(dollar_per_day = tickets_per_day_since_last_scrape * ticket_cost_num) %>%
group_by(ticket_cost_num,scrape_date) %>%
summarise(dollar_spend_per_day = sum(dollar_per_day)) %>%
ungroup() %>%
ggplot(aes(x = scrape_date, y = dollar_spend_per_day, color = as.factor(ticket_cost_num)))+
geom_line()+geom_point(aes(shape = as.factor(ticket_cost_num)))+
scale_y_continuous(labels = scales::dollar_format())
#total spend on scratch offs per day dataframe
#this will be interesting to track for seasonality, weekends, holidays, etc,...
tickets_sold_df %>%
drop_na() %>%
mutate(dollar_per_day = tickets_per_day_since_last_scrape * ticket_cost_num) %>%
group_by(scrape_date) %>%
summarise(dollar_spend_per_day = sum(dollar_per_day))
tickets_sold_df %>%
drop_na() %>%
mutate(dollar_per_day = tickets_per_day_since_last_scrape * ticket_cost_num)
tickets_sold_df %>%
drop_na() %>%
mutate(dollar_per_day = tickets_per_day_since_last_scrape * ticket_cost_num) %>% view()
tickets_sold_df %>%
drop_na() %>%
mutate(dollar_per_day = tickets_per_day_since_last_scrape * ticket_cost_num) %>% view()
#total spend on scratch offs per day dataframe
#this will be interesting to track for seasonality, weekends, holidays, etc,...
tickets_sold_df %>%
drop_na() %>%
mutate(dollar_per_day = tickets_per_day_since_last_scrape * ticket_cost_num) %>%
group_by(scrape_date) %>%
summarise(dollar_spend_per_day = sum(dollar_per_day))
